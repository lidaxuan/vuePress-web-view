(window.webpackJsonp=window.webpackJsonp||[]).push([[215],{620:function(s,e,a){"use strict";a.r(e);var t=a(12),n=Object(t.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"centos"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#centos"}},[s._v("#")]),s._v(" CentOS")]),s._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#yum和rpm操作"}},[s._v("YUM和RPM操作")])]),a("li",[a("a",{attrs:{href:"#systemctl"}},[s._v("systemctl")])]),a("li",[a("a",{attrs:{href:"#firewalld"}},[s._v("firewalld")])]),a("li",[a("a",{attrs:{href:"#内核升级"}},[s._v("内核升级")])]),a("li",[a("a",{attrs:{href:"#一键安装bbr"}},[s._v("一键安装BBR")]),a("ul",[a("li",[a("a",{attrs:{href:"#安装新版内核headers"}},[s._v("安装新版内核headers")])]),a("li",[a("a",{attrs:{href:"#内核升级方法"}},[s._v("内核升级方法")])])])]),a("li",[a("a",{attrs:{href:"#三方工具"}},[s._v("三方工具")])]),a("li",[a("a",{attrs:{href:"#chrome"}},[s._v("Chrome")])])])]),a("p"),s._v(" "),a("h2",{attrs:{id:"yum和rpm操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#yum和rpm操作"}},[s._v("#")]),s._v(" YUM和RPM操作")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("yum -y install 包名")]),s._v("（支持*） ：自动选择y，全自动")]),s._v(" "),a("li",[a("code",[s._v("yum install 包名")]),s._v("（支持*） ：手动选择y or n")]),s._v(" "),a("li",[a("code",[s._v("yum remove 包名")]),s._v("（不支持*）")]),s._v(" "),a("li",[a("code",[s._v("rpm -ivh 包名")]),s._v("（支持*）：安装rpm包")]),s._v(" "),a("li",[a("code",[s._v("rpm -e 包名")]),s._v("（不支持*）：卸载rpm包")]),s._v(" "),a("li",[a("code",[s._v("yum info nginx")]),s._v("(查看当前版本可选)")]),s._v(" "),a("li",[a("code",[s._v("yum list installed | grep 包名")]),s._v("（不支持*）：确认是否安装过包")]),s._v(" "),a("li",[a("code",[s._v("yum -y update")]),s._v(" 更新yum源包")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装EPEL源")]),s._v("\nyum -y "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" epel-release \n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询已安装软件包信息")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rpm")]),s._v(" -qi 软件名\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询已安装软件包安装位置")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rpm")]),s._v(" -ql 软件名\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看已安装软件依赖")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rpm")]),s._v(" -qR 软件名\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看已安装软件的配置文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rpm")]),s._v(" -qc 软件名\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询已安装文件所属软件包")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rpm")]),s._v(" -qf 文件名的绝对路径\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装软件包数量")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rpm")]),s._v(" -qa "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wc")]),s._v(" -l \n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rpm")]),s._v(" -qa "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" 软件名称\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rpm")]),s._v(" -e --nodeps 列出的软件全名\n")])])]),a("h2",{attrs:{id:"systemctl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#systemctl"}},[s._v("#")]),s._v(" systemctl")]),s._v(" "),a("blockquote",[a("p",[a("code",[s._v("systemctl")]),s._v("是"),a("code",[s._v("CentOS7")]),s._v("的服务管理工具中主要的工具，它融合之前"),a("code",[s._v("service")]),s._v("和"),a("code",[s._v("chkconfig")]),s._v("的功能于一体。")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动一个服务")]),s._v("\nsystemctl start firewalld.service\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 关闭一个服务")]),s._v("\nsystemctl stop firewalld.service\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启一个服务")]),s._v("\nsystemctl restart firewalld.service\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示一个服务的状态")]),s._v("\nsystemctl status firewalld.service\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在开机时启用一个服务")]),s._v("\nsystemctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" firewalld.service\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在开机时禁用一个服务")]),s._v("\nsystemctl disable firewalld.service\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看服务是否开机启动")]),s._v("\nsystemctl is-enabled firewalld.service\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看已启动的服务列表")]),s._v("\nsystemctl list-unit-files"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" enabled\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看启动失败的服务列表")]),s._v("\nsystemctl --failed\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看mysql是否自启动")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("chkconfig")]),s._v(" --list "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" mysqld\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置开启自启动")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("chkconfig")]),s._v(" mysqld on\n")])])]),a("h2",{attrs:{id:"firewalld"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#firewalld"}},[s._v("#")]),s._v(" firewalld")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看firewalld状态，发现当前是dead状态，即防火墙未开启。")]),s._v("\nsystemctl status firewalld\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开启防火墙，没有任何提示即开启成功。")]),s._v("\nsystemctl start firewalld\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看已开放的端口(默认不开放任何端口)")]),s._v("\nfirewall-cmd --list-ports\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启防火墙")]),s._v("\nfirewall-cmd --reload\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止防火墙")]),s._v("\nsystemctl stop firewalld.service\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 禁止防火墙开机启动")]),s._v("\nsystemctl disable firewalld.service\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除端口")]),s._v("\nfirewall-cmd --zone"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" public --remove-port"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("/tcp --permanent\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开启80端口")]),s._v("\nfirewall-cmd --zone"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("public --add-port"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("/tcp --permanent\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开启8080-8089的IP端")]),s._v("\nfirewall-cmd --zone"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("public --add-port"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v("-8089/tcp --permanent\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开启3306端口")]),s._v("\nfirewall-cmd --zone"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("public --add-port"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3306")]),s._v("/tcp --permanent\n")])])]),a("ul",[a("li",[a("code",[s._v("--zone")]),s._v(" 作用域")]),s._v(" "),a("li",[a("code",[s._v("--add-port=80/tcp")]),s._v(" 添加端口，格式为：端口/通讯协议")]),s._v(" "),a("li",[a("code",[s._v("--permanent")]),s._v(" 永久生效，没有此参数重启后失效")])]),s._v(" "),a("p",[a("strong",[s._v("配置"),a("code",[s._v("firewalld-cmd")])])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看版本")]),s._v("\nfirewall-cmd --version\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看帮助")]),s._v("\nfirewall-cmd --help\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示状态")]),s._v("\nfirewall-cmd --state\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看所有打开的端口")]),s._v("\nfirewall-cmd --zone"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("public --list-ports\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 更新防火墙规则")]),s._v("\nfirewall-cmd --reload\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看区域信息")]),s._v("\nfirewall-cmd --get-active-zones\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看指定接口所属区域")]),s._v("\nfirewall-cmd --get-zone-of-interface"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("eth0\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 拒绝所有包")]),s._v("\nfirewall-cmd --panic-on\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 取消拒绝状态")]),s._v("\nfirewall-cmd --panic-off\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看是否拒绝")]),s._v("\nfirewall-cmd --query-panic\n")])])]),a("h2",{attrs:{id:"内核升级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内核升级"}},[s._v("#")]),s._v(" 内核升级")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 检查当前CentOS系统版本")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/redhat-release\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 检查当前CentOS系统内核版本")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -sr\n")])])]),a("ul",[a("li",[s._v("运行yum命令升级")])]),s._v(" "),a("blockquote",[a("p",[s._v("CentOS中update命令可以一次性更新所有软件(包括系统版本)到最新版本。")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 先清除所有")]),s._v("\nyum clean all\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 再升级")]),s._v("\nyum update -y\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 升级内核")]),s._v("\nyum update kernel  -y\n")])])]),a("ul",[a("li",[s._v("在"),a("code",[s._v("CentOS7.x")]),s._v("上启用"),a("code",[s._v("ELRepo")]),s._v("仓库")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 首先导入elrepo的key")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rpm")]),s._v(" --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装elrepo的yum")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rpm")]),s._v(" -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm\n")])])]),a("ul",[a("li",[s._v("查看内核相关包")])]),s._v(" "),a("blockquote",[a("p",[s._v("仓库启用后，你可以使用下面的命令列出可用的系统内核相关包，查看内核相关包")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("yum --disablerepo"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),s._v(" --enablerepo"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"elrepo-kernel"')]),s._v(" list available\n")])])]),a("ul",[a("li",[s._v("安装最新的主线稳定内核")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("yum -y --enablerepo"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("elrepo-kernel "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" kernel-ml\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者以下命令安装最新的主线稳定内核")]),s._v("\nyum -y --enablerepo"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("elrepo-kernel "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" kernel-ml.x86_64 kernel-ml-devel.x86_64\n")])])]),a("ul",[a("li",[s._v("查看可用内核")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /boot/grub2/grub.cfg "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" menuentry \n")])])]),a("ul",[a("li",[s._v("设置内核启动项")])]),s._v(" "),a("blockquote",[a("p",[s._v("替换刚刚查看出来的内核名字执行，比如："),a("code",[s._v("grub2-set-default 'CentOS Linux (4.15.13-1.el7.elrepo.x86_64) 7 (Core)'")])]),s._v(" "),a("blockquote",[a("p",[a("code",[s._v("grub2-set-default '内核名字'")])])])]),s._v(" "),a("ul",[a("li",[s._v("查看内核启动项是否设置成功")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("grub2-editenv list\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("reboot")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 检查当前CentOS系统内核版本")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -sr\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看多余的内核")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rpm")]),s._v(" -qa "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" kernel\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除多余的内核")]),s._v("\nyum remove 内核名字\n")])])]),a("h2",{attrs:{id:"一键安装bbr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一键安装bbr"}},[s._v("#")]),s._v(" 一键安装BBR")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/ylx2016/Linux-NetSpeed",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/ylx2016/Linux-NetSpeed"),a("OutboundLink")],1)])]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/teddysun/across",target:"_blank",rel:"noopener noreferrer"}},[s._v("秋水逸冰"),a("OutboundLink")],1)])]),s._v(" "),a("ul",[a("li",[s._v("下载并执行脚本")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x bbr.sh\n./bbr.sh\n")])])]),a("blockquote",[a("p",[s._v("安装完成后，脚本会提示需要重启 VPS，输入"),a("code",[s._v("y")]),s._v("并回车后重启。")])]),s._v(" "),a("ul",[a("li",[s._v("查看内核版本")])]),s._v(" "),a("blockquote",[a("p",[s._v("显示为最新版就表示OK了，重启完成后，进入VPS，验证一下是否成功安装最新内核并开启"),a("code",[s._v("TCP BBR")])])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -r\nsysctl net.ipv4.tcp_available_congestion_control\n")])])]),a("blockquote",[a("p",[s._v("返回值一般为"),a("code",[s._v("net.ipv4.tcp_available_congestion_control = bbr cubic reno")]),s._v("，\n或者为："),a("code",[s._v("net.ipv4.tcp_available_congestion_control = reno cubic bbr")])])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("sysctl net.ipv4.tcp_congestion_control\n")])])]),a("blockquote",[a("p",[s._v("返回值一般为 "),a("code",[s._v("net.ipv4.tcp_congestion_control = bbr")])])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("sysctl net.core.default_qdisc\n")])])]),a("blockquote",[a("p",[s._v("返回值一般为 "),a("code",[s._v("net.core.default_qdisc = fq")])])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("lsmod "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" bbr\n")])])]),a("blockquote",[a("p",[s._v("返回值有"),a("code",[s._v("tcp_bbr")]),s._v("模块即说明"),a("code",[s._v("bbr")]),s._v("已启动。")])]),s._v(" "),a("blockquote",[a("p",[s._v("注意：并不是所有的都会有此返回值，若没有也属正常。")])]),s._v(" "),a("h3",{attrs:{id:"安装新版内核headers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装新版内核headers"}},[s._v("#")]),s._v(" 安装新版内核headers")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("yum --enablerepo"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("elrepo-kernel -y "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" kernel-ml-headers\n")])])]),a("ul",[a("li",[s._v("根据"),a("code",[s._v("CentOS")]),s._v("版本的不同，此时一般会出现类似于以下的错误提示：\n"),a("ul",[a("li",[a("code",[s._v("Error: kernel-ml-headers conflicts with kernel-headers-2.6.32-696.20.1.el6.x86_64")])]),s._v(" "),a("li",[a("code",[s._v("Error: kernel-ml-headers conflicts with kernel-headers-3.10.0-693.17.1.el7.x86_64")])])])])]),s._v(" "),a("p",[a("strong",[s._v("卸载原版内核"),a("code",[s._v("headers")])])]),s._v(" "),a("blockquote",[a("p",[s._v("需要先卸载原版内核"),a("code",[s._v("headers")]),s._v("，然后再安装最新版内核"),a("code",[s._v("headers")]),s._v("。")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("yum remove kernel-headers -y\n")])])]),a("blockquote",[a("p",[s._v("注意：有时候这么操作还会卸载一些对内核 headers 依赖的安装包，比如 gcc、gcc-c++ 之类的。\n不过不要紧，我们可以在安装完最新版内核 headers 后再重新安装回来即可。")])]),s._v(" "),a("h3",{attrs:{id:"内核升级方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内核升级方法"}},[s._v("#")]),s._v(" 内核升级方法")]),s._v(" "),a("ul",[a("li",[s._v("CentOS系统升级内核")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("yum -y "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" kernel-ml kernel-ml-devel\n")])])]),a("ul",[a("li",[s._v("升级"),a("code",[s._v("headers")])])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("yum -y "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" kernel-ml-headers\n")])])]),a("ul",[a("li",[s._v("执行命令")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("grub2-set-default "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])])]),a("blockquote",[a("p",[s._v("最后，重启VPS即可。")])]),s._v(" "),a("h2",{attrs:{id:"三方工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三方工具"}},[s._v("#")]),s._v(" 三方工具")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel lrzsz "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\nlrzsz-devel p7zip p7zip-devel net-tools net-tools-devel "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" vim-devel libaio libaio-devel\n")])])]),a("p",[a("strong",[a("code",[s._v("figlet")])])]),s._v(" "),a("blockquote",[a("p",[s._v("Linux下的命令行工具，我们经常会看到一些终端工具有一个字符Logo,这些Logo可以通过"),a("code",[s._v("Figlet")]),s._v("生成：")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y figlet\n")])])]),a("ul",[a("li",[s._v("居中显示用 "),a("code",[s._v("-c")])]),s._v(" "),a("li",[s._v("从文件导入用 "),a("code",[s._v("-p")]),s._v("， 比如从testFile导入"),a("code",[s._v("figlet -c -p < testFile")])]),s._v(" "),a("li",[s._v("还可以用"),a("code",[s._v("-w")]),s._v("指定宽度。")]),s._v(" "),a("li",[s._v("实时显示时间"),a("code",[s._v("watch -n1 \"date '+%D%n%T' |figlet -k\"")])])]),s._v(" "),a("p",[a("strong",[a("code",[s._v("boxes")])])]),s._v(" "),a("blockquote",[a("p",[s._v("这个工具提供了 n 种样式，例如各种动物等，然后你输入的字符就放在这些图案的内部空白处。")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("yum -y "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" boxes\n")])])]),a("blockquote",[a("p",[s._v("使用boxes -l列出所有的样式。")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" boxes -d "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("style name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 比如dog")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello World"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" boxes -d dog\n")])])]),a("p",[a("strong",[a("code",[s._v("Toilet")])])]),s._v(" "),a("blockquote",[a("p",[s._v("可以输出更丰富的样式，它比 "),a("code",[s._v("figlet")]),s._v(" 命令的效果更有艺术感。")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello World"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" toilet -f term -F border --gay\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可以有颜色")]),s._v("\ntoilet -f mono12 -F metal Linux\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 多种样式")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'+%D %T'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" toilet -f term -F border --gay"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])])]),a("h2",{attrs:{id:"chrome"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chrome"}},[s._v("#")]),s._v(" Chrome")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://intoli.com/blog/installing-google-chrome-on-centos",target:"_blank",rel:"noopener noreferrer"}},[s._v("chrome其他安装方式"),a("OutboundLink")],1)])]),s._v(" "),a("p",[a("strong",[s._v("rpm包安装")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 下载rpm包")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装依赖")]),s._v("\nyum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y lsb libXScrnSaver libappindicator-gtk3 liberation-fonts\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装chrome")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rpm")]),s._v(" -ivh google-chrome-stable_current_x86_64.rpm\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者使用yum安装chrome")]),s._v("\nyum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y google-chrome-stable_current_x86_64.rpm\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看版本")]),s._v("\ngoogle-chrome --version\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装chromedriver：一个用来和chrome交互的接口")]),s._v("\nyum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y chromedriver\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看安装的chromedriver版本")]),s._v("\nchromedriver --version\n")])])]),a("p",[a("strong",[s._v("在线安装")])]),s._v(" "),a("ul",[a("li",[s._v("创建repo文件")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /etc/yum.repos.d/google-chrome.repo\n")])])]),a("ul",[a("li",[s._v("添加内容")])]),s._v(" "),a("div",{staticClass:"language-conf extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[google-chrome]\nname=google-chrome\nbaseurl=http://dl.google.com/linux/chrome/rpm/stable/$basearch\nenabled=1\ngpgcheck=1\ngpgkey=https://dl-ssl.google.com/linux/linux_signing_key.pub\n")])])]),a("ul",[a("li",[s._v("安装")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y google-chrome-stable\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果安装失败")]),s._v("\nyum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" google-chrome-stable --nogpgcheck\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);